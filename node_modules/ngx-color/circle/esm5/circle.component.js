import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { amber, blue, blueGrey, brown, cyan, deepOrange, deepPurple, green, indigo, lightBlue, lightGreen, lime, orange, pink, purple, red, teal, yellow, } from 'material-colors';
import { ColorWrap, SwatchModule } from 'ngx-color';
import { isValidHex } from 'ngx-color';
import { CircleSwatchComponent } from './circle-swatch.component';
var CircleComponent = /** @class */ (function (_super) {
    tslib_1.__extends(CircleComponent, _super);
    function CircleComponent() {
        var _this = _super.call(this) || this;
        /** Pixel value for picker width */
        _this.width = 252;
        /** Color squares to display */
        _this.colors = [
            red['500'],
            pink['500'],
            purple['500'],
            deepPurple['500'],
            indigo['500'],
            blue['500'],
            lightBlue['500'],
            cyan['500'],
            teal['500'],
            green['500'],
            lightGreen['500'],
            lime['500'],
            yellow['500'],
            amber['500'],
            orange['500'],
            deepOrange['500'],
            brown['500'],
            blueGrey['500'],
        ];
        /** Value for circle size */
        _this.circleSize = 28;
        /** Value for spacing between circles */
        _this.circleSpacing = 14;
        return _this;
    }
    CircleComponent.prototype.isActive = function (color) {
        return this.hex === color;
    };
    CircleComponent.prototype.handleBlockChange = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            this.handleChange({ hex: hex, source: 'hex' }, $event);
        }
    };
    CircleComponent.prototype.handleValueChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CircleComponent.prototype, "width", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array)
    ], CircleComponent.prototype, "colors", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CircleComponent.prototype, "circleSize", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], CircleComponent.prototype, "circleSpacing", void 0);
    CircleComponent = tslib_1.__decorate([
        Component({
            selector: 'color-circle',
            template: "\n    <div\n      class=\"circle-picker {{ className }}\"\n      [style.width.px]=\"width\"\n      [style.margin-right.px]=\"-circleSpacing\"\n      [style.margin-bottom.px]=\"-circleSpacing\"\n    >\n      <color-circle-swatch\n        *ngFor=\"let color of colors\"\n        [circleSize]=\"circleSize\"\n        [circleSpacing]=\"circleSpacing\"\n        [color]=\"color\"\n        [focus]=\"isActive(color)\"\n        (onClick)=\"handleBlockChange($event)\"\n        (onSwatchHover)=\"onSwatchHover.emit($event)\"\n      ></color-circle-swatch>\n    </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n      .circle-picker {\n        display: flex;\n        flex-wrap: wrap;\n      }\n    "]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], CircleComponent);
    return CircleComponent;
}(ColorWrap));
export { CircleComponent };
var ColorCircleModule = /** @class */ (function () {
    function ColorCircleModule() {
    }
    ColorCircleModule = tslib_1.__decorate([
        NgModule({
            declarations: [CircleComponent, CircleSwatchComponent],
            exports: [CircleComponent, CircleSwatchComponent],
            imports: [CommonModule, SwatchModule],
        })
    ], ColorCircleModule);
    return ColorCircleModule;
}());
export { ColorCircleModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb2xvci9jaXJjbGUvIiwic291cmNlcyI6WyJjaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUNMLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0wsS0FBSyxFQUNMLElBQUksRUFDSixRQUFRLEVBQ1IsS0FBSyxFQUNMLElBQUksRUFDSixVQUFVLEVBQ1YsVUFBVSxFQUNWLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNULFVBQVUsRUFDVixJQUFJLEVBQ0osTUFBTSxFQUNOLElBQUksRUFDSixNQUFNLEVBQ04sR0FBRyxFQUNILElBQUksRUFDSixNQUFNLEdBQ1AsTUFBTSxpQkFBaUIsQ0FBQztBQUV6QixPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNwRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBaUNsRTtJQUFxQywyQ0FBUztJQThCNUM7UUFBQSxZQUNFLGlCQUFPLFNBQ1I7UUEvQkQsbUNBQW1DO1FBQzFCLFdBQUssR0FBb0IsR0FBRyxDQUFDO1FBQ3RDLCtCQUErQjtRQUUvQixZQUFNLEdBQWE7WUFDakIsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUNWLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDWCxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2IsVUFBVSxDQUFDLEtBQUssQ0FBQztZQUNqQixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2IsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNYLFNBQVMsQ0FBQyxLQUFLLENBQUM7WUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNYLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDWCxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQ1osVUFBVSxDQUFDLEtBQUssQ0FBQztZQUNqQixJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ1gsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUNiLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFDWixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2IsVUFBVSxDQUFDLEtBQUssQ0FBQztZQUNqQixLQUFLLENBQUMsS0FBSyxDQUFDO1lBQ1osUUFBUSxDQUFDLEtBQUssQ0FBQztTQUNoQixDQUFDO1FBQ0YsNEJBQTRCO1FBQ25CLGdCQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLHdDQUF3QztRQUMvQixtQkFBYSxHQUFHLEVBQUUsQ0FBQzs7SUFJNUIsQ0FBQztJQUNELGtDQUFRLEdBQVIsVUFBUyxLQUFLO1FBQ1osT0FBTyxJQUFJLENBQUMsR0FBRyxLQUFLLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBQ0QsMkNBQWlCLEdBQWpCLFVBQWtCLEVBQWU7WUFBYixZQUFHLEVBQUUsa0JBQU07UUFDN0IsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLEdBQUcsS0FBQSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNuRDtJQUNILENBQUM7SUFDRCwyQ0FBaUIsR0FBakIsVUFBa0IsRUFBZ0I7WUFBZCxjQUFJLEVBQUUsa0JBQU07UUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQXpDUTtRQUFSLEtBQUssRUFBRTs7a0RBQThCO0lBR3RDO1FBREMsS0FBSyxFQUFFOzttREFvQk47SUFFTztRQUFSLEtBQUssRUFBRTs7dURBQWlCO0lBRWhCO1FBQVIsS0FBSyxFQUFFOzswREFBb0I7SUE1QmpCLGVBQWU7UUEvQjNCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxjQUFjO1lBQ3hCLFFBQVEsRUFBRSxxakJBaUJUO1lBU0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsbUJBQW1CLEVBQUUsS0FBSztxQkFSeEIsMkZBS0M7U0FJSixDQUFDOztPQUNXLGVBQWUsQ0E0QzNCO0lBQUQsc0JBQUM7Q0FBQSxBQTVDRCxDQUFxQyxTQUFTLEdBNEM3QztTQTVDWSxlQUFlO0FBbUQ1QjtJQUFBO0lBQWdDLENBQUM7SUFBcEIsaUJBQWlCO1FBTDdCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsRUFBRSxxQkFBcUIsQ0FBQztZQUN0RCxPQUFPLEVBQUUsQ0FBQyxlQUFlLEVBQUUscUJBQXFCLENBQUM7WUFDakQsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztTQUN0QyxDQUFDO09BQ1csaUJBQWlCLENBQUc7SUFBRCx3QkFBQztDQUFBLEFBQWpDLElBQWlDO1NBQXBCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgTmdNb2R1bGUsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgYW1iZXIsXG4gIGJsdWUsXG4gIGJsdWVHcmV5LFxuICBicm93bixcbiAgY3lhbixcbiAgZGVlcE9yYW5nZSxcbiAgZGVlcFB1cnBsZSxcbiAgZ3JlZW4sXG4gIGluZGlnbyxcbiAgbGlnaHRCbHVlLFxuICBsaWdodEdyZWVuLFxuICBsaW1lLFxuICBvcmFuZ2UsXG4gIHBpbmssXG4gIHB1cnBsZSxcbiAgcmVkLFxuICB0ZWFsLFxuICB5ZWxsb3csXG59IGZyb20gJ21hdGVyaWFsLWNvbG9ycyc7XG5cbmltcG9ydCB7IENvbG9yV3JhcCwgU3dhdGNoTW9kdWxlIH0gZnJvbSAnbmd4LWNvbG9yJztcbmltcG9ydCB7IGlzVmFsaWRIZXggfSBmcm9tICduZ3gtY29sb3InO1xuaW1wb3J0IHsgQ2lyY2xlU3dhdGNoQ29tcG9uZW50IH0gZnJvbSAnLi9jaXJjbGUtc3dhdGNoLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbG9yLWNpcmNsZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdlxuICAgICAgY2xhc3M9XCJjaXJjbGUtcGlja2VyIHt7IGNsYXNzTmFtZSB9fVwiXG4gICAgICBbc3R5bGUud2lkdGgucHhdPVwid2lkdGhcIlxuICAgICAgW3N0eWxlLm1hcmdpbi1yaWdodC5weF09XCItY2lyY2xlU3BhY2luZ1wiXG4gICAgICBbc3R5bGUubWFyZ2luLWJvdHRvbS5weF09XCItY2lyY2xlU3BhY2luZ1wiXG4gICAgPlxuICAgICAgPGNvbG9yLWNpcmNsZS1zd2F0Y2hcbiAgICAgICAgKm5nRm9yPVwibGV0IGNvbG9yIG9mIGNvbG9yc1wiXG4gICAgICAgIFtjaXJjbGVTaXplXT1cImNpcmNsZVNpemVcIlxuICAgICAgICBbY2lyY2xlU3BhY2luZ109XCJjaXJjbGVTcGFjaW5nXCJcbiAgICAgICAgW2NvbG9yXT1cImNvbG9yXCJcbiAgICAgICAgW2ZvY3VzXT1cImlzQWN0aXZlKGNvbG9yKVwiXG4gICAgICAgIChvbkNsaWNrKT1cImhhbmRsZUJsb2NrQ2hhbmdlKCRldmVudClcIlxuICAgICAgICAob25Td2F0Y2hIb3Zlcik9XCJvblN3YXRjaEhvdmVyLmVtaXQoJGV2ZW50KVwiXG4gICAgICA+PC9jb2xvci1jaXJjbGUtc3dhdGNoPlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtcbiAgICBgXG4gICAgICAuY2lyY2xlLXBpY2tlciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIH1cbiAgICBgLFxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIENpcmNsZUNvbXBvbmVudCBleHRlbmRzIENvbG9yV3JhcCB7XG4gIC8qKiBQaXhlbCB2YWx1ZSBmb3IgcGlja2VyIHdpZHRoICovXG4gIEBJbnB1dCgpIHdpZHRoOiBzdHJpbmcgfCBudW1iZXIgPSAyNTI7XG4gIC8qKiBDb2xvciBzcXVhcmVzIHRvIGRpc3BsYXkgKi9cbiAgQElucHV0KClcbiAgY29sb3JzOiBzdHJpbmdbXSA9IFtcbiAgICByZWRbJzUwMCddLFxuICAgIHBpbmtbJzUwMCddLFxuICAgIHB1cnBsZVsnNTAwJ10sXG4gICAgZGVlcFB1cnBsZVsnNTAwJ10sXG4gICAgaW5kaWdvWyc1MDAnXSxcbiAgICBibHVlWyc1MDAnXSxcbiAgICBsaWdodEJsdWVbJzUwMCddLFxuICAgIGN5YW5bJzUwMCddLFxuICAgIHRlYWxbJzUwMCddLFxuICAgIGdyZWVuWyc1MDAnXSxcbiAgICBsaWdodEdyZWVuWyc1MDAnXSxcbiAgICBsaW1lWyc1MDAnXSxcbiAgICB5ZWxsb3dbJzUwMCddLFxuICAgIGFtYmVyWyc1MDAnXSxcbiAgICBvcmFuZ2VbJzUwMCddLFxuICAgIGRlZXBPcmFuZ2VbJzUwMCddLFxuICAgIGJyb3duWyc1MDAnXSxcbiAgICBibHVlR3JleVsnNTAwJ10sXG4gIF07XG4gIC8qKiBWYWx1ZSBmb3IgY2lyY2xlIHNpemUgKi9cbiAgQElucHV0KCkgY2lyY2xlU2l6ZSA9IDI4O1xuICAvKiogVmFsdWUgZm9yIHNwYWNpbmcgYmV0d2VlbiBjaXJjbGVzICovXG4gIEBJbnB1dCgpIGNpcmNsZVNwYWNpbmcgPSAxNDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG4gIGlzQWN0aXZlKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRoaXMuaGV4ID09PSBjb2xvcjtcbiAgfVxuICBoYW5kbGVCbG9ja0NoYW5nZSh7IGhleCwgJGV2ZW50IH0pIHtcbiAgICBpZiAoaXNWYWxpZEhleChoZXgpKSB7XG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZSh7IGhleCwgc291cmNlOiAnaGV4JyB9LCAkZXZlbnQpO1xuICAgIH1cbiAgfVxuICBoYW5kbGVWYWx1ZUNoYW5nZSh7IGRhdGEsICRldmVudCB9KSB7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UoZGF0YSwgJGV2ZW50KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtDaXJjbGVDb21wb25lbnQsIENpcmNsZVN3YXRjaENvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtDaXJjbGVDb21wb25lbnQsIENpcmNsZVN3YXRjaENvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFN3YXRjaE1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbG9yQ2lyY2xlTW9kdWxlIHt9XG4iXX0=