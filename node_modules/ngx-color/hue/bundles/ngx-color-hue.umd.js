(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('ngx-color')) :
    typeof define === 'function' && define.amd ? define('ngx-color/hue', ['exports', '@angular/common', '@angular/core', 'ngx-color'], factory) :
    (global = global || self, factory((global['ngx-color'] = global['ngx-color'] || {}, global['ngx-color'].hue = {}), global.ng.common, global.ng.core, global['ngx-color']));
}(this, function (exports, common, core, ngxColor) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    var HuePickerComponent = /** @class */ (function (_super) {
        __extends(HuePickerComponent, _super);
        function HuePickerComponent() {
            var _this = _super.call(this) || this;
            /** Pixel value for picker width */
            _this.width = 316;
            /** Pixel value for picker height */
            _this.height = 16;
            _this.radius = 2;
            _this.direction = 'horizontal';
            _this.pointer = {
                width: '18px',
                height: '18px',
                borderRadius: '50%',
                transform: 'translate(-9px, -2px)',
                backgroundColor: 'rgb(248, 248, 248)',
                boxShadow: '0 1px 4px 0 rgba(0, 0, 0, 0.37)',
            };
            return _this;
        }
        HuePickerComponent.prototype.ngOnChanges = function () {
            if (this.direction === 'vertical') {
                this.pointer.transform = 'translate(-3px, -9px)';
            }
            this.setState(ngxColor.toState(this.color, this.oldHue));
        };
        HuePickerComponent.prototype.handlePickerChange = function (_a) {
            var data = _a.data, $event = _a.$event;
            this.handleChange({ a: 1, h: data.h, l: 0.5, s: 1 }, $event);
        };
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], HuePickerComponent.prototype, "width", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], HuePickerComponent.prototype, "height", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], HuePickerComponent.prototype, "radius", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], HuePickerComponent.prototype, "direction", void 0);
        HuePickerComponent = __decorate([
            core.Component({
                selector: 'color-hue-picker',
                template: "\n  <div class=\"hue-picker {{ className }}\"\n    [style.width.px]=\"width\" [style.height.px]=\"height\"\n  >\n    <color-hue [hsl]=\"hsl\" [pointer]=\"pointer\"\n      [direction]=\"direction\" [radius]=\"radius\"\n      (onChange)=\"handlePickerChange($event)\"\n    ></color-hue>\n  </div>\n  ",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: ["\n    .hue-picker {\n      position: relative;\n    }\n  "]
            }),
            __metadata("design:paramtypes", [])
        ], HuePickerComponent);
        return HuePickerComponent;
    }(ngxColor.ColorWrap));
    var ColorHueModule = /** @class */ (function () {
        function ColorHueModule() {
        }
        ColorHueModule = __decorate([
            core.NgModule({
                declarations: [HuePickerComponent],
                exports: [HuePickerComponent],
                imports: [common.CommonModule, ngxColor.HueModule],
            })
        ], ColorHueModule);
        return ColorHueModule;
    }());

    exports.ColorHueModule = ColorHueModule;
    exports.HuePickerComponent = HuePickerComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ngx-color-hue.umd.js.map
