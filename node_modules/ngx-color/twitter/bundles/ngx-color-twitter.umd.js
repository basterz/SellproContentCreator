(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('ngx-color')) :
    typeof define === 'function' && define.amd ? define('ngx-color/twitter', ['exports', '@angular/common', '@angular/core', 'ngx-color'], factory) :
    (global = global || self, factory((global['ngx-color'] = global['ngx-color'] || {}, global['ngx-color'].twitter = {}), global.ng.common, global.ng.core, global['ngx-color']));
}(this, function (exports, common, core, ngxColor) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    var TwitterComponent = /** @class */ (function (_super) {
        __extends(TwitterComponent, _super);
        function TwitterComponent() {
            var _this = _super.call(this) || this;
            /** Pixel value for picker width */
            _this.width = 276;
            /** Color squares to display */
            _this.colors = [
                '#FF6900',
                '#FCB900',
                '#7BDCB5',
                '#00D084',
                '#8ED1FC',
                '#0693E3',
                '#ABB8C3',
                '#EB144C',
                '#F78DA7',
                '#9900EF',
            ];
            _this.triangle = 'top-left';
            _this.swatchStyle = {
                width: '30px',
                height: '30px',
                borderRadius: '4px',
                fontSize: '0',
            };
            _this.input = {
                borderRadius: '4px',
                borderBottomLeftRadius: '0',
                borderTopLeftRadius: '0',
                border: '1px solid #e6ecf0',
                boxSizing: 'border-box',
                display: 'inline',
                fontSize: '14px',
                height: '30px',
                padding: '0',
                paddingLeft: '6px',
                width: '100%',
                color: '#657786',
            };
            return _this;
        }
        TwitterComponent.prototype.focus = function (color) {
            return { boxShadow: "0 0 4px " + color };
        };
        TwitterComponent.prototype.handleBlockChange = function (_a) {
            var hex = _a.hex, $event = _a.$event;
            if (ngxColor.isValidHex(hex)) {
                // this.hex = hex;
                this.handleChange({ hex: hex, source: 'hex' }, $event);
            }
        };
        TwitterComponent.prototype.handleValueChange = function (_a) {
            var data = _a.data, $event = _a.$event;
            this.handleBlockChange({ hex: data, $event: $event });
        };
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], TwitterComponent.prototype, "width", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", Object)
        ], TwitterComponent.prototype, "colors", void 0);
        __decorate([
            core.Input(),
            __metadata("design:type", String)
        ], TwitterComponent.prototype, "triangle", void 0);
        TwitterComponent = __decorate([
            core.Component({
                selector: 'color-twitter',
                template: "\n  <div class=\"twitter-picker {{ triangle }}-triangle {{ className }}\" [style.width.px]=\"width\">\n    <div class=\"triangleShadow\"></div>\n    <div class=\"triangle\"></div>\n    <div class=\"twitter-body\">\n      <div class=\"twitter-swatch\" *ngFor=\"let color of colors\">\n        <color-swatch\n          [color]=\"color\"\n          [style]=\"swatchStyle\"\n          [focusStyle]=\"focus(color)\"\n          (onClick)=\"handleBlockChange($event)\"\n        ></color-swatch>\n      </div>\n      <div class=\"twitter-hash\">\n        <div>#</div>\n      </div>\n      <div class=\"twitter-input\">\n        <color-editable-input\n          [style]=\"{ input: input }\"\n          [value]=\"hex.replace('#', '')\"\n          (onChange)=\"handleValueChange($event)\"\n        ></color-editable-input>\n      </div>\n    </div>\n  </div>\n  ",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: ["\n    .twitter-picker {\n      background: rgb(255, 255, 255);\n      border: 0px solid rgba(0, 0, 0, 0.25);\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 1px 4px;\n      border-radius: 4px;\n      position: relative;\n      box-sizing: border-box;\n    }\n    .triangleShadow {\n      width: 0px;\n      height: 0px;\n      border-style: solid;\n      border-width: 0px 9px 10px;\n      border-color: transparent transparent rgba(0, 0, 0, 0.1);\n      position: absolute;\n    }\n    .triangle {\n      width: 0px;\n      height: 0px;\n      border-style: solid;\n      border-width: 0px 9px 10px;\n      border-color: transparent transparent rgb(255, 255, 255);\n      position: absolute;\n    }\n    .hide-triangle > .triangle {\n      display: none;\n    }\n    .hide-triangle > .triangleShadow {\n      display: none;\n    }\n    .top-left-triangle > .triangle {\n      top: -10px;\n      left: 12px;\n    }\n    .top-left-triangle > .triangleShadow {\n      top: -11px;\n      left: 12px;\n    }\n    .top-right-triangle > .triangle {\n      top: -10px;\n      right: 12px;\n    }\n    .top-right-triangle > .triangleShadow {\n      top: -11px;\n      right: 12px;\n    }\n    .twitter-body {\n      padding: 15px 9px 9px 15px;\n    }\n    .twitter-swatch {\n      width: 30px;\n      height: 30px;\n      display: inline-block;\n      margin: 0 6px 0 0;\n    }\n    .twitter-hash {\n      background: rgb(240, 240, 240);\n      height: 30px;\n      width: 30px;\n      border-radius: 4px 0px 0px 4px;\n      color: rgb(152, 161, 164);\n      margin-left: -3px;\n      display: inline-block;\n\n    }\n    .twitter-hash > div {\n      position: absolute;\n      align-items: center;\n      justify-content: center;\n      height: 30px;\n      width: 30px;\n      display: flex;\n    }\n    .twitter-input {\n      position: relative;\n      display: inline-block;\n      margin-top: -6px;\n      font-size: 10px;\n      height: 27px;\n      padding: 0;\n      position: relative;\n      top: 6px;\n      vertical-align: top;\n      width: 108px;\n      margin-left: -4px;\n    }\n  "]
            }),
            __metadata("design:paramtypes", [])
        ], TwitterComponent);
        return TwitterComponent;
    }(ngxColor.ColorWrap));
    var ColorTwitterModule = /** @class */ (function () {
        function ColorTwitterModule() {
        }
        ColorTwitterModule = __decorate([
            core.NgModule({
                declarations: [TwitterComponent],
                exports: [TwitterComponent],
                imports: [common.CommonModule, ngxColor.SwatchModule, ngxColor.EditableInputModule],
            })
        ], ColorTwitterModule);
        return ColorTwitterModule;
    }());

    exports.ColorTwitterModule = ColorTwitterModule;
    exports.TwitterComponent = TwitterComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ngx-color-twitter.umd.js.map
